---
title: "TCD Teacher Analysis"
format: html
---

# Introduction

This analysis will link the teacher modules in Sierra Leone using teacher IDs and names and then do some basic analysis.

Teachers can be linked by a common ID.  The following are the column names in the various files

* Teacher pedagogy: m4saq1_number
* Teacher Content Knowledge: m5sb_tnum
* Teacher Questionnaire: m3sb_tnumber
* Teacher Roster: TEACHERS__id

```{r setup, include=FALSE}
knitr::opts_chunk$set(
	echo = TRUE,
	fig.height = 6,
	fig.width = 8,
	message = FALSE,
	warning = FALSE
)
library(tidyverse)
library(haven)
library(vtable)
library(here)
library(readxl)
library(stringr)
library(Hmisc)
library(naniar)
library(lubridate)
library(skimr)
library(digest)
library(validate)
library(GGally)
library(Hmisc)
#Country name
country <-'TCD'
country_name <- "Chad"
year <- '2023'
school_file <-'EPDash.dta'
#########################
# File paths #
#########################
#The download_folder will be the location of where raw data is downloaded from the API
#The save_folder will be the location of where cleaned data is stored



if (str_to_lower(Sys.getenv("USERNAME")) == "wb469649" ){
  #project_folder  <- "//wbgfscifs01/GEDEDU/datalib-edu/projects/gepd"
  project_folder  <- "C:/Users/wb469649/WBG/HEDGE Files - HEDGE Documents/GEPD-Confidential/"
  download_folder <-file.path(paste(project_folder,"CNT",country,paste(country,year,"GEPD", sep="_"),paste(country,year,"GEPD_v01_RAW", sep="_"),"Data/raw/School/", sep="/"))
  sampling_folder <-file.path(paste(project_folder,"CNT",country,paste(country,year,"GEPD", sep="_"),paste(country,year,"GEPD_v01_RAW", sep="_"),"Data/sampling", sep="/"))
  confidential_folder <- file.path(paste(project_folder,"CNT",country,paste(country,year,"GEPD", sep="_"),paste(country,year,"GEPD_v01_RAW", sep="_"),"Data/confidential/School", sep="/"))
  save_input_folder <- file.path(paste0(project_folder,"General/LEGO_Teacher_Paper/3_input_data"))
  save_output_folder <- file.path(paste0(project_folder,"General/LEGO_Teacher_Paper/5_output_data"))

} else if  (str_to_lower(Sys.getenv("USERNAME")) == "wb577189" ){
  #project_folder  <- "//wbgfscifs01/GEDEDU/datalib-edu/projects/gepd"
  project_folder  <- "C:/Users/wb577189/OneDrive - WBG/GEPD-Confidential/CNT/"
  download_folder <-file.path(paste(project_folder,"/CNT/",country,paste(country,year,"GEPD", sep="_"),paste(country,year,"GEPD_v01_RAW", sep="_"),"Data/raw/School", sep="/"))
  sampling_folder <-file.path(paste(project_folder,"/CNT/",country,paste(country,year,"GEPD", sep="_"),paste(country,year,"GEPD_v01_RAW", sep="_"),"Data/sampling", sep="/"))
  confidential_folder <- file.path(paste(project_folder,"/CNT/",country,paste(country,year,"GEPD", sep="_"),paste(country,year,"GEPD_v01_RAW", sep="_"),"Data/confidential/School", sep="/"))
  save_input_folder <- file.path(paste0(project_folder,"General/LEGO_Teacher_Paper/3_input_data"))
  save_output_folder <- file.path(paste0(project_folder,"General/LEGO_Teacher_Paper/5_output_data"))

} else {
  download_folder <- choose.dir(default = "", caption = "Select folder to open data downloaded from API")
  save_folder <- choose.dir(default = "", caption = "Select folder to save final data")

}


```

```{r functions}



#function to attach weights

df_weights_function <- function(dataset,scode, snumber, prov) {
  scode<-enquo(scode)  
  snumber<-enquo(snumber)
  prov<-enquo(prov)
  
  dataset %>%
    left_join(data_set_updated)  %>%
    mutate(province=Region,
           district=IDEN) 
}
df_add_weights<- function(dataset) {
  temp<-get(dataset) 
    
    #add hashed school code if needed
    if ("school_code" %in% colnames(temp)) {
      temp <- temp %>%
        left_join(key) %>%
        select(hashed_school_code, hashed_school_province, hashed_school_district, everything())
    }
    
    
    #add on weights
    if ("school_code" %in% colnames(temp)) {
      temp <- df_weights_function(temp, Inst_ID, totalstudents, District)
    }
    
}

```

```{r}
#list of key indicators

ind_list<-c('student_knowledge', 'math_student_knowledge', 'literacy_student_knowledge', 
            'student_proficient', 'student_proficient_70', 'student_proficient_75',
            'literacy_student_proficient', 'literacy_student_proficient_70', 'literacy_student_proficient_75',
            'math_student_proficient', 'math_student_proficient_70', 'math_student_proficient_75',
            'presence_rate','absence_rate', 'sch_absence_rate', 'student_attendance',
            'content_knowledge', 'math_content_knowledge', 'literacy_content_knowledge', 
            'content_proficiency',  'content_proficiency_70', 'content_proficiency_75',
            'literacy_content_proficiency',  'literacy_content_proficiency_70', 'literacy_content_proficiency_75',
            'math_content_proficiency',  'math_content_proficiency_70', 'math_content_proficiency_75',
            'teach_score','classroom_culture','instruction','socio_emotional_skills',
            'teach_prof','classroom_culture_prof','instruction_prof','socio_emotional_skills_prof',
            'ecd_student_proficiency', 'ecd_math_student_proficiency', 'ecd_literacy_student_proficiency', 'ecd_exec_student_proficiency', 'ecd_soc_student_proficiency',
            'ecd_student_knowledge', 'ecd_math_student_knowledge', 'ecd_literacy_student_knowledge', 'ecd_exec_student_knowledge', 'ecd_soc_student_knowledge',
            'inputs', 'blackboard_functional', 'pens_etc', 'textbooks', 'share_desk', 'used_ict', 'access_ict',
            'infrastructure','drinking_water', 'functioning_toilet', 'internet', 'class_electricity','disability_accessibility','disab_road_access', 'disab_school_ramp', 'disab_school_entr', 'disab_class_ramp', 'disab_class_entr', 'disab_screening',
            'operational_management', 'vignette_1', 'vignette_1_resp', 'vignette_1_finance', 'vignette_1_address', 'vignette_2', 'vignette_2_resp', 'vignette_2_finance', 'vignette_2_address', 
            'intrinsic_motivation', 'acceptable_absent', 'students_deserve_attention', 'growth_mindset', 'motivation_teaching',
            'instructional_leadership', 'classroom_observed', 'classroom_observed_recent', 'discussed_observation', 'feedback_observation', 'lesson_plan_w_feedback',
            'principal_knowledge_score', 'add_triple_digit_pknw', 'multiply_double_digit_pknw', 'complete_sentence_pknw', 'experience_pknw', 'textbooks_pknw', 'blackboard_pknw',
            'principal_management', 'sch_goals_exist','sch_goals_clear','sch_goals_relevant','sch_goals_measured',
            'teacher_attraction', 'teacher_satisfied_job', 'teacher_satisfied_status', 'better_teachers_promoted' ,'teacher_bonus', 'salary_delays',
            'teacher_selection_deployment', 'teacher_selection','teacher_deployment',
            'teacher_support', 'pre_service','practicum','in_service','opportunities_teachers_share',
            'teaching_evaluation', 'formally_evaluated', 'evaluation_content', 'negative_consequences','positive_consequences',
            'teacher_monitoring','attendance_evaluated' , 'attendance_rewarded' , 'attendence_sanctions', 'miss_class_admin',
            'sch_management_clarity', 'infrastructure_scfn','materials_scfn','hiring_scfn', 'supervision_scfn', 'student_scfn' , 'principal_hiring_scfn', 'principal_supervision_scfn',
            'standards_monitoring',
            'sch_monitoring', 'monitoring_inputs','monitoring_infrastructure','system_in_place','parents_involved',
            'sch_management_attraction', 'principal_satisfaction',
            'sch_selection_deployment', 
            'sch_support', 'prinicipal_trained','principal_training','principal_used_skills','principal_offered',
            'principal_evaluation', 'principal_formally_evaluated','principal_evaluation_multiple','principal_negative_consequences','principal_positive_consequences'
)

#attach derived indicators
attach(paste0(confidential_folder,"/school_survey_data.RData"))

```


## Weights File

```{r}
#read in the file on school weights
#Load original sample of schools
currentDate<-c("2023-05-12")

sample_folder <- file.path(paste(project_folder,"CNT",country,paste(country,year,"GEPD", sep="_"),paste(country,year,"GEPD_v01_RAW", sep="_"),"Data/sampling/", sep="/"))
data_set_updated <- read_csv(paste(sample_folder, '/GEPD_TCD_weights_', currentDate,  '.csv', sep="")
) %>%
  filter(!(school_code == 223748 & IDEN == 'N DJAMENA 8')) %>% #drop school with duplicate school_code
  filter(!(school_code==585 & TELEPHONE_ETABLISSEMENT!="63170595"),
        !(school_code==773 & TELEPHONE_ETABLISSEMENT!="65941064"),
       !(school_code==2132 & TELEPHONE_ETABLISSEMENT!="91379418"),
     !(school_code==5737 & IPEP!='MATADJANA'),
      !(school_code==5875 & IPEP!='MOUSSORO URBAIN'),
      !(school_code==6699 & DPEN!='HADJER LAMIS'),
        !(school_code==6950 & TELEPHONE_ETABLISSEMENT!="66031532/90684733"),
         !(school_code==7404 & IPEP!='DABANSAKA URBAIN (MASSAGUET)'),
        !(school_code==12380 & IPEP!='10EME ARROND N DJAMENA A'),
            !(school_code==220586 & IPEP!='KALAÏT'),
     !(school_code==221233 & IPEP!='DAGANA URBAIN'),
     !(school_code==224357 & IPEP!='AM TIMAN URBAIN'), 
     !(school_code==225988 & IPEP!='5EME ARROND N DJAMENA')
         ) %>%
  mutate(
         urban_rural=if_else(rural==0, "Urban", "Rural"),
         public=if_else(public==0, "Private", "Public")) %>%
  select(school_code, Region, IDEN, public, rural ,urban_rural,
         ipw) 




key <- read_csv(file.path(confidential_folder, "EPDash_linkfile_hashed.csv"))
```

## School File

```{r school}

###########################
#read in school level file
###########################
school_dta<-read_dta(file.path(download_folder, "EPDash_final.dta")) %>%
  select(-starts_with("ENUM"))

school_dta<- school_dta %>%
  mutate(enumerator_name_other= m1s0q1_name_other  ,
         #enumerator_number=m1s0q1_name ,
         survey_time=m1s0q8,
         lat=m1s0q9__Latitude,
         lon=m1s0q9__Longitude,
         school_code=as.numeric(m1s0q2_emis),
         m7_teach_count_pknw=m7_teach_count, #this variable was mistakenly not tagged as pknw
         total_enrolled=m1saq7) %>%
  ## Get names and code for all the blank interviews
  mutate(
    
    #school_code= if_else(school_info_correct==1, as.numeric(school_code), as.numeric(m1s0q2_emis)),
    school_name_preload = m1s0q2_name
    
  ) %>%
  select(-starts_with("enumerators_preload")) %>% #bring in school codes that were created in separate stata program
  filter(!is.na(school_code))



school_micro_raw <- school_dta %>%
  group_by(school_code) %>%
  fill(everything(), .direction='downup') %>%
  slice(1) %>% 
  ungroup()


var.list <- sapply(school_dta, function(x) attr(x,"label"))
var.labels= unlist(var.list)


#merge on derived indicators
school_micro_comb <- school_micro_raw %>%
  left_join(
    school_dta_short %>%
      select(school_code, ind_list)
  ) %>%
  select(colnames(school_data_preamble), ind_list, everything())

#add weights and anonymize
school_micro <- df_add_weights('school_micro_comb')                   

#school_micro <- Hmisc::upData(school_micro, labels = var.labels)

```


```{r}
#create a file for matching to tecaher and student files

#list additional info that will be useful to keep in each indicator dataframe
preamble_info <- c( 'interview__key', 'school_code',
                   'school_name_preload', 
                   'school_province_preload', 'school_district_preload', 'school_emis_preload', 'school_emis_preload',
                   'school_info_correct', 'm1s0q2_name', 'm1s0q2_code', 'm1s0q2_emis',
                   'survey_time', 'lat', 'lon' , 'total_enrolled' , 'm7saq10'
                   )

drop_school_info <- c(

)


#create school database with just preamble info.  This will be useful for merging on school level info to some databases
school_data_preamble_temp <- school_dta %>%
  group_by(school_code) %>%
  select( preamble_info) %>%
  select(-interview__key) %>%
  summarise_all( ~(if(is.numeric(.)) mean(., na.rm = TRUE) else first(.))) 
  
school_data_preamble <- school_dta %>%
  group_by(interview__key) %>%
  select(interview__key, school_code) %>%
  left_join(school_data_preamble_temp)
```


## Teacher Questionnaire File

```{r}

teacher_questionnaire<-read_dta(file.path(download_folder, "questionnaire_roster.dta")) 

#Add school preamble info
teacher_questionnaire <- teacher_questionnaire %>%
  left_join(school_data_preamble) %>%
  select(preamble_info, everything())



#add weights and anonymize
teacher_questionnaire_micro <- df_add_weights('teacher_questionnaire')      %>%
  select(-starts_with('interview__'), -c('lat','lon'))              

```


## Teacher Absence File

```{r}
############################
#read in teacher roster file
############################

teacher_absence_dta<-read_dta(file.path(download_folder, "TEACHERS.dta")) 

#Add school preamble info
teacher_absence_dta <- teacher_absence_dta %>%
  left_join(school_data_preamble) %>%
  select(preamble_info, everything()) 

#merge on derived indicators
teacher_absence_dta_comb <- teacher_absence_dta %>%
  left_join(
    teacher_absence_final %>%
      select(school_code, TEACHERS__id, contains(ind_list))
  ) %>%
  distinct(school_code, TEACHERS__id, .keep_all = TRUE)

#add weights and anonymize
teacher_absence_micro <- df_add_weights('teacher_absence_dta_comb')       %>%
  select(-starts_with('interview__'), -c('lat','lon'))             


```


## Teacher Assessment File

```{r teacherassess}
#read in data from difference questionnaire.  This was done because the exams were graded back in the central office.
teacher_assessment_dta_raw <- read_dta(file.path(download_folder, "teacher_assessment_answers.dta")) %>%
  left_join(school_data_preamble) %>%
  select(preamble_info, everything()) 

#merge on derived indicators
teacher_assessment_dta_comb <- teacher_assessment_dta_raw %>%
  left_join(
    teacher_assessment_dta %>%
      select(school_code, teacher_assessment_answers__id, contains(ind_list))
  ) %>%
  distinct(school_code, teacher_assessment_answers__id, .keep_all = TRUE)


#add weights and anonymize
teacher_assessment_micro <- df_add_weights('teacher_assessment_dta_comb')         %>%
  select(-starts_with('interview__'), -c('lat','lon'))          


```




## Teacher Pedagogy File

```{r pedg}




teacher_pedagogy <- school_dta %>%
  filter(!is.na(subject_test)) %>%
  select(preamble_info, c('m4saq1':'subject_test','s1_0_1_1':'s1_c9_3','s2_0_1_1':'s2_c9_3')) %>%
  mutate(GRADE=4)

teacher_pedagogy_g2 <- school_dta %>%
  filter(!is.na(subject_test)) %>%
  select(preamble_info, c('m9saq1':'subject_test_g2','s1_0_1_1_g2':'s1_c9_3_g2','s2_0_1_1_g2':'s2_c9_3_g2')  ) %>%
  rename_at(vars(ends_with('_g2')), ~str_remove_all(.,"_g2")) %>%
  rename(m4saq1=m9saq1,
         m4saq1_number=m9saq1_number) %>%
  mutate(GRADE=2)

teacher_pedagogy_segments <- teacher_pedagogy  %>%
    bind_rows(teacher_pedagogy_g2)
  
teach_dta <- teacher_pedagogy  %>%
    bind_rows(teacher_pedagogy_g2) %>%
  pivot_longer(
    cols = c("s1_0_1_1":"s2_c9_3"),
    names_to = c("school_clip", "behaviour"),
    names_pattern = "(s[0-9])_(.*)",
    values_to = "count"
  ) %>% filter(!is.na(count)) %>% distinct(.)  %>% 

    mutate(behaviour = paste0("s_", behaviour),
           school_clip = if_else(school_clip =="s1", "1", "2"),
           id=row_number(),
           count = as.numeric(count)) %>% 
    
    pivot_wider(id_cols =c(id, school_code, school_clip, GRADE, m4saq1, m4saq1_number), names_from = behaviour, values_from = count) %>% select(-id) 

  
    ## We regroup by school and video segment
  coalesce_by_column <- function(df) {
    return(dplyr::coalesce(!!! as.list(df)))
  }
  
  teach_dta <- teach_dta %>% 
    group_by(school_code, school_clip, GRADE) %>% 
    summarise_all(coalesce_by_column) %>% 
    #mutate(across(everything(), as.numeric)) %>% 
    ungroup()
  


  #pull out school code from video clip name
  teacher_pedagogy_segments <- teach_dta %>%
    rename(clip = school_clip) %>% 
    # filter(!is.na(school_code)) %>%
    # mutate(
    #        clip_temp=str_replace(school_clip," ", ""),
    #        clip_temp=grepl('Segment1', clip_temp),
    #        clip=if_else(clip_temp==TRUE, 1,2)
    #          ) %>%
    # select(-clip_temp, -video_length, -school_clip, -person, -enum_comments) %>%
    select(school_code, clip, GRADE, everything()) 
   # mutate(across(everything(), as.numeric))
  
  #recode scores to be numeric


  low_medium_high <- c(
    "s_0_1_2",
    "s_0_2_2",
    "s_0_3_2",
    "s_a2_1",
    "s_a2_2",
    "s_a2_3",
    "s_b3_1",
    "s_b3_2",
    "s_b3_3",
    "s_b3_4",
    "s_b5_1",
    "s_b5_2",
    "s_b6_1",
    "s_b6_2",
    "s_b6_3",
    "s_c7_1",
    "s_c7_2",
    "s_c7_3",
    "s_c8_1",
    "s_c8_2",
    "s_c8_3",
    "s_c9_1",
    "s_c9_2",
    "s_c9_3")

  low_medium_high_na <- c("s_a1_1",
                          "s_a1_2",
                          "s_a1_3",
                          "s_a1_4",
                          "s_b4_1",
                          "s_b4_2",
                          "s_b4_3"

  )


  yes_no <- c("s_0_1_1",
              "s_0_2_1",
              "s_0_3_1"
  )

  overall <- c('s_a1',
               's_a2',
               's_b3',
               's_b4',
               's_b5',
               's_b6',
               's_c7',
               's_c8',
               's_c9'
  )


  teacher_pedagogy_segments <- teacher_pedagogy_segments %>%
    mutate_at(vars(overall),~(if_else(. %in% c('1','2','3','4','5'),as.numeric(.),as.numeric(NA) ))) %>%
    # mutate_at(vars(low_medium_high,low_medium_high_na,yes_no),~(if_else(. %in% c('L','M','H','Y','N'),.,as.character(NA) ))) %>%
    # mutate_at(vars(low_medium_high), ~(if_else(. %in% c('L','M','H'),.,as.character(NA) ))) %>%
    # mutate_at(vars(low_medium_high_na), ~(if_else(. %in% c('L','M','H'),.,as.character(NA) ))) %>%
    # mutate_at(vars(low_medium_high,low_medium_high_na,yes_no),~(str_replace_all(.,"[[:punct:]]",""))) %>%
    # mutate_at(vars(low_medium_high), ~case_when(
    #   .=="L" ~ 2,
    #   .=="M" ~ 3,
    #   .=="H" ~ 4,
    #   TRUE ~ as.numeric(NA)
    # )) %>%
    # mutate_at(vars(low_medium_high_na), ~case_when(
    #   .=="NA" ~ 1,
    #   .=="L" ~ 2,
    #   .=="M" ~ 3,
    #   .=="H" ~ 4,
    #   TRUE ~ as.numeric(NA)
    # )) %>%
    # mutate_at(vars(yes_no), ~case_when(
    #   .=="N" ~ 0,
    #   .=="Y" ~ 1,
    #   TRUE ~ as.numeric(NA)
    # )) %>%
    mutate_at(vars(low_medium_high), ~(factor(., levels=c(1,2,3,4), labels=c("NA", "Low", "Medium", "High")))) %>%
    mutate_at(vars(low_medium_high_na), ~(factor(., levels=c(1,2,3,4), labels=c("NA", "Low", "Medium", "High")))) %>%
    mutate_at(vars(yes_no), ~(factor(.,levels=c(0,1), labels=c("No", "Yes"))))


  #create sub-indicators from TEACH
  teacher_pedagogy_segments <- teacher_pedagogy_segments %>% 
    mutate(classroom_culture=rowMeans(select(.,s_a1, s_a2)),
           instruction=rowMeans(select(.,s_b3, s_b4, s_b5, s_b6)),
           socio_emotional_skills=rowMeans(select(.,s_c7, s_c8, s_c9))
    ) %>%
    mutate(teach_score=rowMeans(select(.,classroom_culture, instruction, socio_emotional_skills)))

  # Time on task - First measure (Yes/No on "Teacher provides learning activites to most students")
  # Generate a variable computing the proportion of times each teacher for each segment is providing a learning activity to students
  # We are only taking into account teachers for which we have at least 2 snapshots observed

  teacher_pedagogy_segments <- teacher_pedagogy_segments %>%
    mutate(nb_tt1=3-(is.na(s_0_1_1) + is.na(s_0_2_1) + is.na(s_0_3_1))) %>%
    mutate_at(vars(s_0_1_1, s_0_2_1, s_0_3_1), ~case_when(.=="Yes" ~ 1,
                                                          .=="No" ~ 0,
                                                          TRUE ~ NA_real_)) %>%
    mutate(timeontask1=if_else(nb_tt1>=2, rowMeans(select(.,s_0_1_1, s_0_2_1, s_0_3_1), na.rm=TRUE), NA_real_))


  #een tt_yes=rowmean(s_0_1_1_yes s_0_2_1_yes s_0_3_1_yes) if nb_tt1>=2
  #replace tt_yes=tt_yes*100
  #egen tt_no=rowmean(s_0_1_1_no s_0_2_1_no s_0_3_1_no) if nb_tt1>=2
  #replace tt_no=tt_no*100

  # Time on task - Second measure
  # Proportion of classes where a low number of students are on task, a medium number of students are on task
  teacher_pedagogy_segments <- teacher_pedagogy_segments %>%
    mutate(tot_low=rowSums(select(.,s_0_1_2,s_0_2_2,s_0_3_2) == "Low"),
           tot_medium=rowSums(select(.,s_0_1_2,s_0_2_2,s_0_3_2) == "Medium"),
           tot_high=rowSums(select(.,s_0_1_2,s_0_2_2,s_0_3_2) == "High"))

  # We count the number of snapshots observed (in case the observation lasted less than 15 minutes) and for which the teacher was providing a learning activity

  # For each of the variables "Low", "Medium" and "High", we create our own mean (in case the observation lasted less than 15 minutes or teacher was not providing a learning activity)
  # We are only taking into account teachers for which we have at least 2 snapshots observed

  teacher_pedagogy_segments <- teacher_pedagogy_segments %>%
    mutate(nb_tt2=3-(is.na(s_0_1_2) + is.na(s_0_2_2) + is.na(s_0_3_2)),
           tt_low=if_else(nb_tt2 >= 2, 100*tot_low/nb_tt2, NA_real_),
           tt_medium=if_else(nb_tt2 >= 2, 100*tot_medium/nb_tt2, NA_real_),
           tt_high=if_else(nb_tt2 >= 2, 100*tot_high/nb_tt2, NA_real_))

final_indicator_data_PEDG <- teacher_pedagogy_segments %>%
    mutate(teach_score=(classroom_culture+instruction+socio_emotional_skills)/3,
           teach_prof=100*as.numeric(teach_score>=3),                      #rate teacher as proficient in teach and the subcomponents if they score at least 3
           classroom_culture_prof=100*as.numeric(classroom_culture>=3),
           instruction_prof=100*as.numeric(instruction>=3),
           socio_emotional_skills_prof=100*as.numeric(socio_emotional_skills>=3)) %>%
    filter(!is.na(teach_score)) %>%
    #write_excel_csv(path = paste(confidential_folder, "teach_raw_data.csv", sep="/")) %>%
    group_by(school_code, GRADE, m4saq1, m4saq1_number) %>%
    mutate(number_segments=  sum(!is.na(teach_score))) %>%
    summarise_all( ~(if(is.numeric(.)) mean(., na.rm = TRUE) else first(.))) %>%
    select( -starts_with('interview'), -starts_with('enumerator'))
  
  
#add weights and anonymize
teacher_pedagogy_micro <- df_add_weights('final_indicator_data_PEDG') %>%
  select(-starts_with('interview__')) 


```








```{r}
#join the assessment, pedagogy, and questionnaire info to the roster

#start with teacher questionnaire
teacher_combined_df <- teacher_absence_micro %>%
  left_join(teacher_questionnaire_micro %>% mutate(TEACHERS__id=m3sb_tnumber), na_matches='never') %>%
  group_by(school_code,TEACHERS__id) %>%
  slice(1) 


sum(!is.na(teacher_combined_df$m3sb_tnumber))
pct <- round(100*sum(!is.na(teacher_combined_df$m3sb_tnumber))/nrow(teacher_questionnaire_micro))
print(paste0(pct,"% of teachers interviewed for questionnaire are successfully matched"))


# now teacher pedagogy
teacher_combined_df <- teacher_combined_df %>%
  left_join(teacher_pedagogy_micro %>% mutate(TEACHERS__id=m4saq1_number), na_matches='never') %>%
  group_by(school_code,TEACHERS__id) %>%
  slice(1) 


sum(!is.na(teacher_combined_df$m4saq1_number))
pct <- round(100*sum(!is.na(teacher_combined_df$m4saq1_number))/nrow(teacher_pedagogy_micro))
print(paste0(pct,"% of teachers assessed for pedagogy are successfully matched"))





# now teacher content
teacher_combined_df <- teacher_combined_df %>%
  left_join(teacher_assessment_micro %>% mutate(TEACHERS__id=m5sb_tnum), na_matches='never') %>%
  group_by(school_code,TEACHERS__id) %>%
  slice(1) 


sum(!is.na(teacher_combined_df$m5sb_tnum))
pct <- round(100*sum(!is.na(teacher_combined_df$m5sb_tnum))/nrow(teacher_assessment_micro))
print(paste0(pct,"% of teachers assessed for content knowledge are successfully matched"))



```

```{r}
matches <- teacher_combined_df %>%
  select(school_code, grade_joined, TEACHERS__id, m2saq2, m5sb_tnum, m5sb_troster, m3sb_tnumber, m3sb_troster,m4saq1_number, m4saq1)


```

```{r}

teacher_combined_df %>%
  janitor::clean_names() %>%
  write_dta(path=paste0(save_input_folder,"/",country,"/", country,"_teacher_combined_modules.dta"))


matches %>%
  janitor::clean_names() %>%
  write_dta(path=paste0(save_input_folder,"/",country,"/", country,"_teacher_modules_key.dta"))

#save input files
school_micro %>%
  janitor::clean_names() %>%
  write_dta(path=paste0(save_input_folder,"/",country,"/", country,"_school_modules.dta"))

teacher_absence_micro %>%
  janitor::clean_names() %>%
  write_dta(path=paste0(save_input_folder,"/",country,"/", country,"_teacher_absence.dta"))

teacher_pedagogy_micro %>%
  janitor::clean_names() %>%
  write_dta(path=paste0(save_input_folder,"/",country,"/", country,"_teacher_pedagogy.dta"))

teacher_assessment_micro %>%
  janitor::clean_names() %>%
  write_dta(path=paste0(save_input_folder,"/",country,"/", country,"_teacher_assessment.dta"))

teacher_questionnaire_micro %>%
  janitor::clean_names() %>%
  write_dta(path=paste0(save_input_folder,"/",country,"/", country,"_teacher_questionnaire.dta"))

assess_4th_grade_anon %>%
  select(-ends_with('nogiraffe')) %>%
  janitor::clean_names() %>%
  write_dta(path=paste0(save_input_folder,"/",country,"/", country,"_fourth_grade_assessment.dta"))

ecd_dta_anon %>%
  janitor::clean_names() %>%
  write_dta(path=paste0(save_input_folder,"/",country,"/", country,"_first_grade_assessment.dta"))
```



