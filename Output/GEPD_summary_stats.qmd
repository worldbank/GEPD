---
title: "GEPD Practice Indicators"
format: docx
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(
	echo = FALSE,
	fig.height = 8,
	fig.width = 10,
	warning = FALSE
)
#include packages
library(tidyverse)
library(haven)
library(kableExtra)
library(skimr)
library(flextable)
library(ggridges)
library(scales)
library(ggtext)
library(estimatr)
library(srvyr)
#library(spatstat)
library(Hmisc)
library(ggpmisc)
library(ggalt)
library(here)
library(patchwork)
library(DT)
#remotes::install_github("ricardo-bion/ggradar")
library(ggradar)

# define stle for ggplot based on BBC plotting styles
bbc_style <- function() {
  font <- "Helvetica"
  
  ggplot2::theme(
    
    #Text format:
    #This sets the font, size, type and colour of text for the chart's title
    plot.title = ggplot2::element_text(family=font,
                                       size=28,
                                       face="bold",
                                       color="#222222"),
    #This sets the font, size, type and colour of text for the chart's subtitle, as well as setting a margin between the title and the subtitle
    plot.subtitle = ggplot2::element_text(family=font,
                                          size=22,
                                          margin=ggplot2::margin(9,0,9,0)),
    plot.caption = ggplot2::element_blank(),
    #This leaves the caption text element empty, because it is set elsewhere in the finalise plot function
    
    #Legend format
    #This sets the position and alignment of the legend, removes a title and backround for it and sets the requirements for any text within the legend. The legend may often need some more manual tweaking when it comes to its exact position based on the plot coordinates.
    legend.position = "top",
    legend.text.align = 0,
    legend.background = ggplot2::element_blank(),
    legend.title = ggplot2::element_blank(),
    legend.key = ggplot2::element_blank(),
    legend.text = ggplot2::element_text(family=font,
                                        size=18,
                                        color="#222222"),
    
    #Axis format
    #This sets the text font, size and colour for the axis test, as well as setting the margins and removes lines and ticks. In some cases, axis lines and axis ticks are things we would want to have in the chart - the cookbook shows examples of how to do so.
    axis.title = ggplot2::element_blank(),
    axis.text = ggplot2::element_text(family=font,
                                      size=18,
                                      color="#222222"),
    axis.text.x = ggplot2::element_text(margin=ggplot2::margin(5, b = 10)),
    axis.ticks = ggplot2::element_blank(),
    axis.line = ggplot2::element_blank(),
    
    #Grid lines
    #This removes all minor gridlines and adds major y gridlines. In many cases you will want to change this to remove y gridlines and add x gridlines. The cookbook shows you examples for doing so
    panel.grid.minor = ggplot2::element_blank(),
    panel.grid.major.y = ggplot2::element_line(color="#cbcbcb"),
    panel.grid.major.x = ggplot2::element_blank(),
    
    #Blank background
    #This sets the panel background as blank, removing the standard grey ggplot background colour from the plot
    panel.background = ggplot2::element_blank(),
    
    #Strip background (#This sets the panel background for facet-wrapped plots to white, removing the standard grey ggplot background colour and sets the title size of the facet-wrap title to font size 22)
    strip.background = ggplot2::element_rect(fill="white"),
    strip.text = ggplot2::element_text(size  = 22,  hjust = 0)
  )
}

```




# Introduction




- The Global Education Policy Dashboard  applies framework of WDR 2018 

- Create and collect a concise set of indicators that allow tracking of key determinants of learning.  

- The Dashboard tracks three levels, the three Ps:
  * Practice
  * Policies
  * Politics.

- The data is collected using three surveys: A school survey, an policy survey, and a survey of public officials

School Survey: The School Survey will collect data primarily on Practices (the quality of service delivery in schools), but also on some de facto Policy and school-level Politics indicators.  It will consist of streamlined versions of existing instruments—including SDI and SABER SD on teachers, 4th grade students, and inputs/infrastructure, TEACH on pedagogical practice, GECDD on school readiness of young children, and DWMS on management quality—together with new questions to fill gaps in those instruments.  Though the number of modules is similar to the full version of SDI, the number of items within each module is significantly lower. In each country, this survey will be administered in a nationally representative sample of 250 schools, selected through stratified  random sampling. As currently envisioned, the School Survey will include 8 short modules.
Expert Survey: The Expert Survey will collect information to feed into the policy indicators.  This survey will be filled out by key informants in each country, drawing on their knowledge to identify key elements of the policy framework (as in the SABER approach to policy-data collection that the Bank has used over the past 7 years).  The survey will have 4 modules with each including approximately ten questions.

Policy Survey:  The policy survey is conducted by an expert on the laws and regulations of a country.  The experts gather information on De Jure policies in the education system for that country.

Survey of Public Officials: The Survey of Public Officials will collect information about the capacity and orientation of the bureaucracy, as well as political factors affecting education outcomes. This survey will be a streamlined and education-focused version of the civil-servant surveys that the Bank’s Bureaucracy Lab has implemented recently in several countries, and the dashboard team is collaborating closely with DEC and Governance GP staff to develop this instrument.  As currently envisioned, the survey will be administered to a random sample of about 200 staff serving in the central education ministry and district education offices.  It will include questions about technical and leadership skills, work environment, stakeholder engagement, clientelism, and attitudes and behaviors.

Roadmap:  
- Below is a set of tables and charts containing findings for the Sierra Leone 2022 Global Education Policy Dashboard survey. - We will start with breakdowns of our Practice indicators  
- Then we will discuss findings of our Practice Indicators  
- Finally we will conclude with findings for our Bureaucracy Indicators.  




```{r data, message=FALSE, warning=FALSE, include=FALSE}

#Country name
country <-'SLE'
country_name <- "Sierra Leone"
year <- '2022'


#set directory to bring in data
if (str_to_lower(Sys.getenv("USERNAME")) == "wb469649"){
  #project_folder  <- "//wbgfscifs01/GEDEDU/datalib-edu/projects/gepd"
  data_dir <- file.path("C:/Users/wb469649/WBG/HEDGE Files - HEDGE Documents/GEPD/CNT",country,paste(country,year,"GEPD", sep="_"),paste(country,year,"GEPD_v01_M", sep="_"),"Data/")
  project_folder  <- "C:/Users/wb469649/WBG/HEDGE Files - HEDGE Documents/GEPD-Confidential/CNT/"
  download_folder <-file.path(paste(project_folder,country,paste(country,year,"GEPD", sep="_"),paste(country,year,"GEPD_v01_RAW", sep="_"),"Data/raw/", sep="/"))
  confidential_folder <- file.path(paste(project_folder,country,paste(country,year,"GEPD", sep="_"),paste(country,year,"GEPD_v01_RAW", sep="_"),"Data/confidential/", sep="/"))
  save_folder <- file.path(paste(project_folder,country,paste(country,year,"GEPD", sep="_"),paste(country,year,"GEPD_v01_RAW", sep="_"),"Data/anonymized/", sep="/"))
  backup_onedrive="no"
  save_folder_onedrive <- file.path(paste("C:/Users/wb469649/WBG/Ezequiel Molina - Dashboard (Team Folder)/Country_Work/",country_name,year,"Data/clean/", sep="/"))
  anonymized_dir <- "C:/Users/wb469649/WBG/HEDGE Files - HEDGE Documents/GEPD/"
  
} else if (str_to_lower(Sys.getenv("USERNAME")) == "wb577189") {
  
  #project_folder  <- "//wbgfscifs01/GEDEDU/datalib-edu/projects/gepd"
  project_folder  <- "C:/Users/wb577189/OneDrive - WBG/GEPD-Confidential/CNT"
  data_dir <- file.path("C:/Users/wb577189/OneDrive - WBG/GEPD/CNT",country,paste(country,year,"GEPD", sep="_"),paste(country,year,"GEPD_v01_M"),"Data/")
  download_folder <-file.path(paste(project_folder,country,paste(country,year,"GEPD", sep="_"),paste(country,year,"GEPD_v01_RAW", sep="_"),"Data/raw/", sep="/"))
  confidential_folder <- file.path(paste(project_folder,country,paste(country,year,"GEPD", sep="_"),paste(country,year,"GEPD_v01_RAW", sep="_"),"Data/confidential/", sep="/"))
  save_folder <- file.path(paste(project_folder,country,paste(country,year,"GEPD", sep="_"),paste(country,year,"GEPD_v01_RAW", sep="_"),"Data/anonymized/", sep="/"))
  backup_onedrive="no"
  save_folder_onedrive <- file.path(paste("C:/Users/wb577189/OneDrive - WBG/My files/Dashboard (Team Folder)/Country_Work",country_name,year,"Data/clean/", sep="/"))
} else {
  download_folder <- choose.dir(default = "", caption = "Select folder to open data downloaded from API")
  save_folder <- choose.dir(default = "", caption = "Select folder to save final data")
  anonymized_dir <- "C:/Users/wb577189/OneDrive - WBG/GEPD/"
}

work_dir<- save_folder

#load public official data
load(paste(work_dir, "/Public_Officials/public_officials_indicators_data_anon.RData", sep=""))

#load school data for comparisons
load(paste(work_dir, "/School/school_indicators_data_anon.RData", sep=""))


#Create a function which will generate new binary variable using case_when, but 
#if value is misisng it will generate binary variable to be missing
#This is done a lot so will create function for it.
#e.g. school_absent=case_when(
#         m2sbq6_efft==6  ~ 1,
#         m2sbq6_efft!=6   ~ 0,
#         is.na(m2sbq6_efft) ~ as.numeric(NA))
bin_var <- function(var, val) {
  case_when(
    var==val  ~ 1,
    var!=val   ~ 0,
    is.na(var) ~ as.numeric(NA))
}

#create function to wrap text
wrapper <- function(x, ...) 
{
  paste(strwrap(x, ...), collapse = "\n")
}

```

## Country Comparison

```{r cc, echo=FALSE, message=FALSE, warning=FALSE}
#list countries
countries <- c("PER", "JOR", "RWA", "MDG", "ETH", "SLE")

dir <- here()
indicators_dir <- paste(dir, 'Indicators', sep="/")
out_dir <- paste(dir, 'Output', sep="/")

#read in indicator metadata
indicators <- read_csv(paste(dir,'Indicators/indicators.csv', sep = "/"))

# read in indicator data
SLE_data <- read_csv(paste0(indicators_dir, "/GEPD_Indicators_API_", 'SLE', ".csv")) %>%
  mutate(country="Sierra Leone",
         date='2022') 

PER_data <- read_csv(paste0(indicators_dir, "/GEPD_Indicators_API_", 'PER', ".csv")) %>%
  mutate(country="Peru",
         date='2019')

RWA_data <- read_csv(paste0(indicators_dir, "/GEPD_Indicators_API_", 'RWA', ".csv")) %>%
  mutate(country="Rwanda",
         date='2020') 


JOR_data <- read_csv(paste0(indicators_dir, "/GEPD_Indicators_API_", 'JOR', ".csv")) %>%
  mutate(country="Jordan",
         date='2019') 


ETH_data <- read_csv(paste0(indicators_dir, "/GEPD_Indicators_API_", 'ETH_pooled', ".csv")) %>%
  mutate(country="Ethiopia",
         date='2020-2021')  

# %>%
#   rename(value=value_pooled)

MDG_data <- read_csv(paste0(indicators_dir, "/GEPD_Indicators_API_", 'MDG', ".csv")) %>%
  mutate(country="Madagascar",
         date='2021') 


# Indicator names
indicator_names_df <- PER_data %>%
  select(Series, `Indicator Name`)

combined_df_raw <- bind_rows(SLE_data,PER_data,JOR_data, ETH_data, RWA_data, MDG_data)


  
  combined_df <- combined_df_raw %>%
    arrange(Series) %>%
    mutate(
           value=round(value,1),
           value_color=case_when(
             value_metadata=="Needs Improvement" ~ "#FF0000",
             value_metadata=="Caution" ~ "#FCD606",
             value_metadata=="On Target" ~ "#85C546",
             TRUE ~ "#808080"
           ),
           Series=str_replace_all(Series, "SE.LPV","SE.GEPD"))


combined_wide_df <- combined_df %>%
  select(Series, country, value) %>%
  pivot_wider(
    names_from=country, 
    values_from=value
  ) %>%
  left_join(indicator_names_df)

combined_wide_color <- combined_df %>%
  select(Series, country, value_color) %>%
  pivot_wider(
    names_from=country, 
    values_from=value_color
  ) %>%
  left_join(indicator_names_df)





```

```{r countrytabfn, echo=FALSE, message=FALSE, warning=FALSE}
#create function for creating country comparison tables
country_tab_fn <- function(variables, title) {
  
  
tab_df <- combined_wide_df %>%
  filter(Series %in% variables) %>%
  arrange(factor(Series, levels=variables))

#set colors
tab_color_df <- combined_wide_color %>%
  filter(Series %in% variables) %>%
  arrange(factor(Series, levels=variables))

SLE_col <- tab_color_df$`Sierra Leone`
Peru_col <- tab_color_df$Peru
Jordan_col <- tab_color_df$Jordan
Rwanda_col <- tab_color_df$Rwanda
Ethiopia_col <- tab_color_df$Ethiopia
Madagascar_col <- tab_color_df$Madagascar


#build table
tab_df <- tab_df  %>%
  select(`Indicator Name`,`Sierra Leone`, Peru, Jordan, Rwanda, Ethiopia, Madagascar)


ovr_table <- flextable(tab_df) %>%
  add_header_lines(title) %>%
  add_footer_lines('Source: UIS, GLAD, GEPD, World Bank. 
 Green indicates indicator "on-target", yellow indicates "requires caution", red indicates "needs improvement"' ) %>%
  theme_vanilla()

#colors
ovr_table <- ovr_table %>%
  bg(j = c('Sierra Leone'),
     bg = SLE_col) %>%
  bg(j = c('Peru'),
     bg = Peru_col) %>%
  bg(j = c('Jordan'),
     bg = Jordan_col) %>%
  bg(j = c('Ethiopia'),
     bg = Ethiopia_col) %>%
  bg(j = c('Rwanda'),
     bg = Rwanda_col) %>%
  bg(j = c('Madagascar'),
     bg = Madagascar_col)   


ovr_table %>%
  autofit()

  
}
```

Table. Outcome Indicators.

```{r}
# Produce a table showing means by country for select practice indicators
outcome_indicators <- c(
  'SE.GEPD.PRIM',
  'SE.GEPD.PRIM.BMP',
  'SE.PRM.TENR'

)
country_tab_fn(outcome_indicators, 'GEPD Outcome Indicators') %>%
  add_footer_lines('Rwanda does not have an internationally comparable learning assessment to report on Learning Poverty.')
```

Table. Practice Indicators.
```{r }
# Produce a table showing means by country for select practice indicators
practice_indicators <- c(
  'SE.PRM.LERN',
  'SE.PRM.EFFT.1',
  'SE.PRM.EFFT.2',
  'SE.PRM.CONT',
  'SE.PRM.PEDG',
  'SE.PRM.INPT',
  'SE.PRM.INFR',
  'SE.PRM.LCAP',
  'SE.PRM.ATTD',
  'SE.PRM.OPMN',
  'SE.PRM.ILDR',
  'SE.PRM.PKNW',
  'SE.PRM.PMAN'
)
country_tab_fn(practice_indicators, 'GEPD Practice Indicators')
```
